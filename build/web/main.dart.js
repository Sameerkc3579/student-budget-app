// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const bottom_sheet = flutter_sdk.src__material__bottom_sheet;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const gradient = flutter_sdk.src__painting__gradient;
  const alignment = flutter_sdk.src__painting__alignment;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const colors$ = flutter_sdk.src__painting__colors;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const card = flutter_sdk.src__material__card;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const list_tile = flutter_sdk.src__material__list_tile;
  const date_format = flutter_sdk.src__intl__date_format;
  const floating_action_button = flutter_sdk.src__material__floating_action_button;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const dialog = flutter_sdk.src__material__dialog;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const text_button = flutter_sdk.src__material__text_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const form = flutter_sdk.src__widgets__form;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const dropdown = flutter_sdk.src__material__dropdown;
  const date_picker = flutter_sdk.src__material__date_picker;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $add = dartx.add;
  var $_set = dartx._set;
  var $removeAt = dartx.removeAt;
  var $_get = dartx._get;
  var $where = dartx.where;
  var $toList = dartx.toList;
  var $fold = dartx.fold;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $length = dartx.length;
  var $trim = dartx.trim;
  var $isEmpty = dartx.isEmpty;
  var $map = dartx.map;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    JSArrayOfMapOfString$dynamic: () => (T.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T.MapOfString$dynamic())))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    MapOfString$dynamicTobool: () => (T.MapOfString$dynamicTobool = dart.constFn(dart.fnType(core.bool, [T.MapOfString$dynamic()])))(),
    doubleAndMapOfString$dynamicTodouble: () => (T.doubleAndMapOfString$dynamicTodouble = dart.constFn(dart.fnType(core.double, [core.double, T.MapOfString$dynamic()])))(),
    BuildContextToFilterExpenses: () => (T.BuildContextToFilterExpenses = dart.constFn(dart.fnType(main.FilterExpenses, [framework.BuildContext])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    BuildContextToAddExpense: () => (T.BuildContextToAddExpense = dart.constFn(dart.fnType(main.AddExpense, [framework.BuildContext])))(),
    BuildContextAndintToCard: () => (T.BuildContextAndintToCard = dart.constFn(dart.fnType(card.Card, [framework.BuildContext, core.int])))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    DropdownButtonFormFieldOfString: () => (T.DropdownButtonFormFieldOfString = dart.constFn(dropdown.DropdownButtonFormField$(core.String)))(),
    DropdownMenuItemOfString: () => (T.DropdownMenuItemOfString = dart.constFn(dropdown.DropdownMenuItem$(core.String)))(),
    StringToDropdownMenuItemOfString: () => (T.StringToDropdownMenuItemOfString = dart.constFn(dart.fnType(T.DropdownMenuItemOfString(), [core.String])))(),
    StringNTovoid: () => (T.StringNTovoid = dart.constFn(dart.fnType(dart.void, [T.StringN()])))(),
    JSArrayOfStringN: () => (T.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T.StringN())))(),
    StringNToDropdownMenuItemOfString: () => (T.StringNToDropdownMenuItemOfString = dart.constFn(dart.fnType(T.DropdownMenuItemOfString(), [T.StringN()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.HomeScreen.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 86400000000
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Student Budget App"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57978
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[5] || CT.C5
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[8] || CT.C8,
        [TextStyle_inherit]: true
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290377418
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285132974
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278249078
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278241363
      });
    },
    get C11() {
      return C[11] = dart.constMap(core.int, ui.Color, [100, C[12] || CT.C12, 200, C[13] || CT.C13, 400, C[14] || CT.C14, 700, C[15] || CT.C15]);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: colors.MaterialAccentColor.prototype,
        [Color_value]: 4285132974,
        [ColorSwatch__swatch]: C[11] || CT.C11
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[10] || CT.C10,
        [TextStyle_inherit]: true
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 5,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 5,
        [EdgeInsets_left]: 10
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3707764736
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[18] || CT.C18,
        [TextStyle_inherit]: true
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2315255808
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[20] || CT.C20,
        [TextStyle_inherit]: true
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964192
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294959282
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954112
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294948685
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294944550
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294940672
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294675456
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278144
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293880832
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293284096
      });
    },
    get C23() {
      return C[23] = dart.constMap(core.int, ui.Color, [50, C[24] || CT.C24, 100, C[25] || CT.C25, 200, C[26] || CT.C26, 300, C[27] || CT.C27, 400, C[28] || CT.C28, 500, C[29] || CT.C29, 600, C[30] || CT.C30, 700, C[31] || CT.C31, 800, C[32] || CT.C32, 900, C[33] || CT.C33]);
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294940672,
        [ColorSwatch__swatch]: C[23] || CT.C23
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57882
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[22] || CT.C22,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[34] || CT.C34
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962158
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954450
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293892762
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293227379
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293874512
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294198070
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292030255
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291176488
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290190364
      });
    },
    get C37() {
      return C[37] = dart.constMap(core.int, ui.Color, [50, C[38] || CT.C38, 100, C[39] || CT.C39, 200, C[40] || CT.C40, 300, C[41] || CT.C41, 400, C[42] || CT.C42, 500, C[43] || CT.C43, 600, C[44] || CT.C44, 700, C[45] || CT.C45, 800, C[46] || CT.C46, 900, C[47] || CT.C47]);
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294198070,
        [ColorSwatch__swatch]: C[37] || CT.C37
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57785
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[36] || CT.C36,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[48] || CT.C48
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57415
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[50] || CT.C50
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Enter Total Budget"
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Budget in Rupees",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 5
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 4000000
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Please enter a valid budget."
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[54] || CT.C54,
        [SnackBar_dismissDirection]: C[55] || CT.C55,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[56] || CT.C56,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: null,
        [SnackBar_content]: C[57] || CT.C57
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Submit"
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Cancel"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Set Total Budget"
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Title",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Amount",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_constraints]: null,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixIconColor]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixIconColor]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelAlignment]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_floatingLabelStyle]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: "Category",
        [InputDecoration_label]: null,
        [InputDecoration_iconColor]: null,
        [InputDecoration_icon]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[66] || CT.C66,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[65] || CT.C65,
        [Text_textSpan]: null,
        [Text_data]: "Filter Expenses"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57984
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[70] || CT.C70
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Apply Filters"
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: main.StudentBudgetApp.prototype,
        [Widget_key]: null
      });
    }
  }, false);
  var C = Array(73).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.StudentBudgetApp = class StudentBudgetApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.StudentBudgetApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, title: "Student Budget App", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue}), home: C[1] || CT.C1});
    }
  };
  (main.StudentBudgetApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.StudentBudgetApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.StudentBudgetApp.prototype;
  dart.addTypeTests(main.StudentBudgetApp);
  dart.addTypeCaches(main.StudentBudgetApp);
  dart.setMethodSignature(main.StudentBudgetApp, () => ({
    __proto__: dart.getMethods(main.StudentBudgetApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.StudentBudgetApp, I[0]);
  main.HomeScreen = class HomeScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.HomeScreen.new({key: key});
    }
    createState() {
      return new main._HomeScreenState.new();
    }
  };
  (main.HomeScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.HomeScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.HomeScreen.prototype;
  dart.addTypeTests(main.HomeScreen);
  dart.addTypeCaches(main.HomeScreen);
  dart.setMethodSignature(main.HomeScreen, () => ({
    __proto__: dart.getMethods(main.HomeScreen.__proto__),
    createState: dart.fnType(framework.State$(main.HomeScreen), [])
  }));
  dart.setLibraryUri(main.HomeScreen, I[0]);
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  var InputDecoration_constraints = dart.privateName(input_decorator, "InputDecoration.constraints");
  var InputDecoration_alignLabelWithHint = dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint");
  var InputDecoration_semanticCounterText = dart.privateName(input_decorator, "InputDecoration.semanticCounterText");
  var InputDecoration_enabled = dart.privateName(input_decorator, "InputDecoration.enabled");
  var InputDecoration_border = dart.privateName(input_decorator, "InputDecoration.border");
  var InputDecoration_enabledBorder = dart.privateName(input_decorator, "InputDecoration.enabledBorder");
  var InputDecoration_disabledBorder = dart.privateName(input_decorator, "InputDecoration.disabledBorder");
  var InputDecoration_focusedErrorBorder = dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder");
  var InputDecoration_focusedBorder = dart.privateName(input_decorator, "InputDecoration.focusedBorder");
  var InputDecoration_errorBorder = dart.privateName(input_decorator, "InputDecoration.errorBorder");
  var InputDecoration_hoverColor = dart.privateName(input_decorator, "InputDecoration.hoverColor");
  var InputDecoration_focusColor = dart.privateName(input_decorator, "InputDecoration.focusColor");
  var InputDecoration_fillColor = dart.privateName(input_decorator, "InputDecoration.fillColor");
  var InputDecoration_filled = dart.privateName(input_decorator, "InputDecoration.filled");
  var InputDecoration_counterStyle = dart.privateName(input_decorator, "InputDecoration.counterStyle");
  var InputDecoration_counter = dart.privateName(input_decorator, "InputDecoration.counter");
  var InputDecoration_counterText = dart.privateName(input_decorator, "InputDecoration.counterText");
  var InputDecoration_suffixIconConstraints = dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints");
  var InputDecoration_suffixIconColor = dart.privateName(input_decorator, "InputDecoration.suffixIconColor");
  var InputDecoration_suffixStyle = dart.privateName(input_decorator, "InputDecoration.suffixStyle");
  var InputDecoration_suffixText = dart.privateName(input_decorator, "InputDecoration.suffixText");
  var InputDecoration_suffix = dart.privateName(input_decorator, "InputDecoration.suffix");
  var InputDecoration_suffixIcon = dart.privateName(input_decorator, "InputDecoration.suffixIcon");
  var InputDecoration_prefixIconColor = dart.privateName(input_decorator, "InputDecoration.prefixIconColor");
  var InputDecoration_prefixStyle = dart.privateName(input_decorator, "InputDecoration.prefixStyle");
  var InputDecoration_prefixText = dart.privateName(input_decorator, "InputDecoration.prefixText");
  var InputDecoration_prefix = dart.privateName(input_decorator, "InputDecoration.prefix");
  var InputDecoration_prefixIconConstraints = dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints");
  var InputDecoration_prefixIcon = dart.privateName(input_decorator, "InputDecoration.prefixIcon");
  var InputDecoration_isCollapsed = dart.privateName(input_decorator, "InputDecoration.isCollapsed");
  var InputDecoration_contentPadding = dart.privateName(input_decorator, "InputDecoration.contentPadding");
  var InputDecoration_isDense = dart.privateName(input_decorator, "InputDecoration.isDense");
  var InputDecoration_floatingLabelAlignment = dart.privateName(input_decorator, "InputDecoration.floatingLabelAlignment");
  var InputDecoration_floatingLabelBehavior = dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior");
  var InputDecoration_errorMaxLines = dart.privateName(input_decorator, "InputDecoration.errorMaxLines");
  var InputDecoration_errorStyle = dart.privateName(input_decorator, "InputDecoration.errorStyle");
  var InputDecoration_errorText = dart.privateName(input_decorator, "InputDecoration.errorText");
  var InputDecoration_hintMaxLines = dart.privateName(input_decorator, "InputDecoration.hintMaxLines");
  var InputDecoration_hintTextDirection = dart.privateName(input_decorator, "InputDecoration.hintTextDirection");
  var InputDecoration_hintStyle = dart.privateName(input_decorator, "InputDecoration.hintStyle");
  var InputDecoration_hintText = dart.privateName(input_decorator, "InputDecoration.hintText");
  var InputDecoration_helperMaxLines = dart.privateName(input_decorator, "InputDecoration.helperMaxLines");
  var InputDecoration_helperStyle = dart.privateName(input_decorator, "InputDecoration.helperStyle");
  var InputDecoration_helperText = dart.privateName(input_decorator, "InputDecoration.helperText");
  var InputDecoration_floatingLabelStyle = dart.privateName(input_decorator, "InputDecoration.floatingLabelStyle");
  var InputDecoration_labelStyle = dart.privateName(input_decorator, "InputDecoration.labelStyle");
  var InputDecoration_labelText = dart.privateName(input_decorator, "InputDecoration.labelText");
  var InputDecoration_label = dart.privateName(input_decorator, "InputDecoration.label");
  var InputDecoration_iconColor = dart.privateName(input_decorator, "InputDecoration.iconColor");
  var InputDecoration_icon = dart.privateName(input_decorator, "InputDecoration.icon");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var SnackBar_clipBehavior = dart.privateName(snack_bar, "SnackBar.clipBehavior");
  var SnackBar_dismissDirection = dart.privateName(snack_bar, "SnackBar.dismissDirection");
  var SnackBar_onVisible = dart.privateName(snack_bar, "SnackBar.onVisible");
  var SnackBar_animation = dart.privateName(snack_bar, "SnackBar.animation");
  var SnackBar_duration = dart.privateName(snack_bar, "SnackBar.duration");
  var SnackBar_closeIconColor = dart.privateName(snack_bar, "SnackBar.closeIconColor");
  var SnackBar_showCloseIcon = dart.privateName(snack_bar, "SnackBar.showCloseIcon");
  var SnackBar_action = dart.privateName(snack_bar, "SnackBar.action");
  var SnackBar_behavior = dart.privateName(snack_bar, "SnackBar.behavior");
  var SnackBar_shape = dart.privateName(snack_bar, "SnackBar.shape");
  var SnackBar_width = dart.privateName(snack_bar, "SnackBar.width");
  var SnackBar_padding = dart.privateName(snack_bar, "SnackBar.padding");
  var SnackBar_margin = dart.privateName(snack_bar, "SnackBar.margin");
  var SnackBar_elevation = dart.privateName(snack_bar, "SnackBar.elevation");
  var SnackBar_backgroundColor = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var SnackBar_content = dart.privateName(snack_bar, "SnackBar.content");
  main._HomeScreenState = class _HomeScreenState extends framework.State$(main.HomeScreen) {
    setTotalBudget(newBudget) {
      this.setState(dart.fn(() => {
        this.totalBudget = newBudget;
      }, T.VoidTovoid()));
    }
    addExpense(title, amount, category, dateTime) {
      this.setState(dart.fn(() => {
        this.expenses[$add](new (T.IdentityMapOfString$dynamic()).from(["title", title, "amount", amount, "category", category, "dateTime", dateTime]));
      }, T.VoidTovoid()));
    }
    updateExpense(index, title, amount, category, dateTime) {
      this.setState(dart.fn(() => {
        this.expenses[$_set](index, new (T.IdentityMapOfString$dynamic()).from(["title", title, "amount", amount, "category", category, "dateTime", dateTime]));
      }, T.VoidTovoid()));
    }
    deleteExpense(index) {
      this.setState(dart.fn(() => {
        this.expenses[$removeAt](index);
      }, T.VoidTovoid()));
    }
    applyFilters(startDate, endDate, category) {
      this.setState(dart.fn(() => {
        this.filterStartDate = startDate;
        this.filterEndDate = endDate;
        this.filterCategory = category;
      }, T.VoidTovoid()));
    }
    get filteredExpenses() {
      return this.expenses[$where](dart.fn(expense => {
        let matchesDate = (this.filterStartDate == null || dart.dtest(dart.dsend(expense[$_get]("dateTime"), 'isAfter', [dart.nullCheck(this.filterStartDate)]))) && (this.filterEndDate == null || dart.dtest(dart.dsend(expense[$_get]("dateTime"), 'isBefore', [dart.nullCheck(this.filterEndDate).add(C[2] || CT.C2)])));
        let matchesCategory = this.filterCategory == null || dart.equals(expense[$_get]("category"), this.filterCategory);
        return matchesDate && matchesCategory;
      }, T.MapOfString$dynamicTobool()))[$toList]();
    }
    build(context) {
      let totalSpent = this.filteredExpenses[$fold](core.double, 0, dart.fn((sum, item) => sum + core.num.as(item[$_get]("amount")), T.doubleAndMapOfString$dynamicTodouble()));
      let remainingBudget = this.totalBudget - totalSpent;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[3] || CT.C3, actions: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[4] || CT.C4, onPressed: dart.fn(() => {
                bottom_sheet.showModalBottomSheet(dart.dynamic, {context: context, builder: dart.fn(_ => new main.FilterExpenses.new({applyFilters: dart.bind(this, 'applyFilters'), filterStartDate: this.filterStartDate, filterEndDate: this.filterEndDate, filterCategory: this.filterCategory}), T.BuildContextToFilterExpenses())});
              }, T.VoidTovoid())})])}), body: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({gradient: new gradient.LinearGradient.new({begin: alignment.Alignment.topLeft, end: alignment.Alignment.bottomRight, colors: T.JSArrayOfColor().of([colors.Colors.purple.shade200, colors.Colors.blue.shade300])})}), child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[6] || CT.C6, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new("Total Budget: ₹" + this.totalBudget[$toStringAsFixed](2), {style: C[7] || CT.C7}), new text.Text.new("Remaining: ₹" + remainingBudget[$toStringAsFixed](2), {style: C[9] || CT.C9})])})}), new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: this.filteredExpenses[$length], itemBuilder: dart.fn((ctx, index) => {
                    let expense = this.filteredExpenses[$_get](index);
                    return new card.Card.new({margin: C[16] || CT.C16, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), shadowColor: colors.Colors.black45, elevation: 5, child: new list_tile.ListTile.new({title: new text.Text.new(core.String.as(expense[$_get]("title")), {style: C[17] || CT.C17}), subtitle: new text.Text.new("Category: " + dart.str(expense[$_get]("category")) + "\n" + "Date: " + new date_format.DateFormat.yMMMd().format(core.DateTime.as(expense[$_get]("dateTime"))) + ", " + "Time: " + new date_format.DateFormat.jm().format(core.DateTime.as(expense[$_get]("dateTime"))), {style: C[19] || CT.C19}), trailing: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[21] || CT.C21, onPressed: dart.fn(() => {
                                bottom_sheet.showModalBottomSheet(dart.dynamic, {context: context, isScrollControlled: true, builder: dart.fn(_ => new main.AddExpense.new({addExpense: dart.bind(this, 'addExpense'), updateExpense: dart.bind(this, 'updateExpense'), expenseIndex: index, expenseToEdit: expense}), T.BuildContextToAddExpense())});
                              }, T.VoidTovoid())}), new icon_button.IconButton.new({icon: C[35] || CT.C35, onPressed: dart.fn(() => this.deleteExpense(index), T.VoidTovoid())})])})})});
                  }, T.BuildContextAndintToCard())})})])})}), floatingActionButton: new floating_action_button.FloatingActionButton.new({onPressed: dart.fn(() => {
            bottom_sheet.showModalBottomSheet(dart.dynamic, {context: context, isScrollControlled: true, builder: dart.fn(_ => new main.AddExpense.new({addExpense: dart.bind(this, 'addExpense'), updateExpense: dart.bind(this, 'updateExpense')}), T.BuildContextToAddExpense())});
          }, T.VoidTovoid()), child: C[49] || CT.C49, backgroundColor: colors.Colors.purpleAccent}), bottomSheet: new basic.Padding.new({padding: C[6] || CT.C6, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
              dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => {
                  let budgetController = new editable_text.TextEditingController.new();
                  return new dialog.AlertDialog.new({title: C[51] || CT.C51, content: new text_field.TextField.new({controller: budgetController, keyboardType: text_input.TextInputType.number, decoration: C[52] || CT.C52}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                          let t0;
                          let newBudget = (t0 = core.double.tryParse(budgetController.text), t0 == null ? 0 : t0);
                          if (newBudget > 0) {
                            this.setTotalBudget(newBudget);
                            navigator.Navigator.of(context).pop(T.ObjectN());
                          } else {
                            scaffold.ScaffoldMessenger.of(context).showSnackBar(C[53] || CT.C53);
                          }
                        }, T.VoidTovoid()), child: C[58] || CT.C58}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                          navigator.Navigator.of(context).pop(T.ObjectN());
                        }, T.VoidTovoid()), child: C[59] || CT.C59})])});
                }, T.BuildContextToAlertDialog())});
            }, T.VoidTovoid()), child: C[60] || CT.C60, style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.purpleAccent})})})});
    }
    static ['_#new#tearOff']() {
      return new main._HomeScreenState.new();
    }
  };
  (main._HomeScreenState.new = function() {
    this.totalBudget = 500;
    this.expenses = T.JSArrayOfMapOfString$dynamic().of([]);
    this.filterStartDate = null;
    this.filterEndDate = null;
    this.filterCategory = null;
    main._HomeScreenState.__proto__.new.call(this);
    ;
  }).prototype = main._HomeScreenState.prototype;
  dart.addTypeTests(main._HomeScreenState);
  dart.addTypeCaches(main._HomeScreenState);
  dart.setMethodSignature(main._HomeScreenState, () => ({
    __proto__: dart.getMethods(main._HomeScreenState.__proto__),
    setTotalBudget: dart.fnType(dart.void, [core.double]),
    addExpense: dart.fnType(dart.void, [core.String, core.double, core.String, core.DateTime]),
    updateExpense: dart.fnType(dart.void, [core.int, core.String, core.double, core.String, core.DateTime]),
    deleteExpense: dart.fnType(dart.void, [core.int]),
    applyFilters: dart.fnType(dart.void, [dart.nullable(core.DateTime), dart.nullable(core.DateTime), dart.nullable(core.String)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(main._HomeScreenState, () => ({
    __proto__: dart.getGetters(main._HomeScreenState.__proto__),
    filteredExpenses: core.List$(core.Map$(core.String, dart.dynamic))
  }));
  dart.setLibraryUri(main._HomeScreenState, I[0]);
  dart.setFieldSignature(main._HomeScreenState, () => ({
    __proto__: dart.getFields(main._HomeScreenState.__proto__),
    totalBudget: dart.fieldType(core.double),
    expenses: dart.fieldType(core.List$(core.Map$(core.String, dart.dynamic))),
    filterStartDate: dart.fieldType(dart.nullable(core.DateTime)),
    filterEndDate: dart.fieldType(dart.nullable(core.DateTime)),
    filterCategory: dart.fieldType(dart.nullable(core.String))
  }));
  var addExpense$ = dart.privateName(main, "AddExpense.addExpense");
  var updateExpense$ = dart.privateName(main, "AddExpense.updateExpense");
  var expenseIndex$ = dart.privateName(main, "AddExpense.expenseIndex");
  var expenseToEdit$ = dart.privateName(main, "AddExpense.expenseToEdit");
  main.AddExpense = class AddExpense extends framework.StatefulWidget {
    get addExpense() {
      return this[addExpense$];
    }
    set addExpense(value) {
      super.addExpense = value;
    }
    get updateExpense() {
      return this[updateExpense$];
    }
    set updateExpense(value) {
      super.updateExpense = value;
    }
    get expenseIndex() {
      return this[expenseIndex$];
    }
    set expenseIndex(value) {
      super.expenseIndex = value;
    }
    get expenseToEdit() {
      return this[expenseToEdit$];
    }
    set expenseToEdit(value) {
      super.expenseToEdit = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let addExpense = opts && 'addExpense' in opts ? opts.addExpense : null;
      let updateExpense = opts && 'updateExpense' in opts ? opts.updateExpense : null;
      let expenseIndex = opts && 'expenseIndex' in opts ? opts.expenseIndex : null;
      let expenseToEdit = opts && 'expenseToEdit' in opts ? opts.expenseToEdit : null;
      return new main.AddExpense.new({key: key, addExpense: addExpense, updateExpense: updateExpense, expenseIndex: expenseIndex, expenseToEdit: expenseToEdit});
    }
    createState() {
      return new main._AddExpenseState.new();
    }
  };
  (main.AddExpense.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let addExpense = opts && 'addExpense' in opts ? opts.addExpense : null;
    let updateExpense = opts && 'updateExpense' in opts ? opts.updateExpense : null;
    let expenseIndex = opts && 'expenseIndex' in opts ? opts.expenseIndex : null;
    let expenseToEdit = opts && 'expenseToEdit' in opts ? opts.expenseToEdit : null;
    this[addExpense$] = addExpense;
    this[updateExpense$] = updateExpense;
    this[expenseIndex$] = expenseIndex;
    this[expenseToEdit$] = expenseToEdit;
    main.AddExpense.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.AddExpense.prototype;
  dart.addTypeTests(main.AddExpense);
  dart.addTypeCaches(main.AddExpense);
  dart.setMethodSignature(main.AddExpense, () => ({
    __proto__: dart.getMethods(main.AddExpense.__proto__),
    createState: dart.fnType(framework.State$(main.AddExpense), [])
  }));
  dart.setLibraryUri(main.AddExpense, I[0]);
  dart.setFieldSignature(main.AddExpense, () => ({
    __proto__: dart.getFields(main.AddExpense.__proto__),
    addExpense: dart.finalFieldType(dart.fnType(dart.dynamic, [core.String, core.double, core.String, core.DateTime])),
    updateExpense: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [core.int, core.String, core.double, core.String, core.DateTime]))),
    expenseIndex: dart.finalFieldType(dart.nullable(core.int)),
    expenseToEdit: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.dynamic)))
  }));
  var _titleController = dart.privateName(main, "_titleController");
  var _amountController = dart.privateName(main, "_amountController");
  var _selectedCategory = dart.privateName(main, "_selectedCategory");
  var _selectedDateTime = dart.privateName(main, "_selectedDateTime");
  var _formKey = dart.privateName(main, "_formKey");
  var _submitData = dart.privateName(main, "_submitData");
  main._AddExpenseState = class _AddExpenseState extends framework.State$(main.AddExpense) {
    initState() {
      super.initState();
      if (this.widget.expenseToEdit != null) {
        this[_titleController].text = core.String.as(dart.nullCheck(this.widget.expenseToEdit)[$_get]("title"));
        this[_amountController].text = dart.toString(dart.nullCheck(this.widget.expenseToEdit)[$_get]("amount"));
        this[_selectedCategory] = core.String.as(dart.nullCheck(this.widget.expenseToEdit)[$_get]("category"));
        this[_selectedDateTime] = core.DateTime.as(dart.nullCheck(this.widget.expenseToEdit)[$_get]("dateTime"));
      }
    }
    [_submitData]() {
      let t4, t3, t2, t1, t0;
      if (!dart.nullCheck(this[_formKey].currentState).validate()) return;
      let enteredTitle = this[_titleController].text[$trim]();
      let enteredAmount = core.double.parse(this[_amountController].text);
      if (this.widget.expenseIndex == null) {
        t0 = this.widget;
        t1 = enteredTitle;
        t2 = enteredAmount;
        t3 = this[_selectedCategory];
        t4 = this[_selectedDateTime];
        t0.addExpense(t1, t2, t3, t4);
      } else {
        dart.nullCheck(this.widget.updateExpense)(dart.nullCheck(this.widget.expenseIndex), enteredTitle, enteredAmount, this[_selectedCategory], this[_selectedDateTime]);
      }
      navigator.Navigator.of(this.context).pop(T.ObjectN());
    }
    build(context) {
      return new basic.Padding.new({padding: C[6] || CT.C6, child: new form.Form.new({key: this[_formKey], child: new basic.Column.new({children: T.JSArrayOfWidget().of([new text_form_field.TextFormField.new({controller: this[_titleController], decoration: C[61] || CT.C61, validator: dart.fn(value => {
                  if (value == null || value[$isEmpty]) {
                    return "Please enter a title";
                  }
                  return null;
                }, T.StringNToStringN())}), new text_form_field.TextFormField.new({controller: this[_amountController], decoration: C[62] || CT.C62, keyboardType: text_input.TextInputType.number, validator: dart.fn(value => {
                  if (value == null || value[$isEmpty] || core.double.tryParse(value) == null) {
                    return "Please enter a valid amount";
                  }
                  return null;
                }, T.StringNToStringN())}), new (T.DropdownButtonFormFieldOfString()).new({value: this[_selectedCategory], decoration: C[63] || CT.C63, items: T.JSArrayOfString().of(["Food", "Transport", "Entertainment", "Others"])[$map](T.DropdownMenuItemOfString(), dart.fn(category => new (T.DropdownMenuItemOfString()).new({value: category, child: new text.Text.new(category)}), T.StringToDropdownMenuItemOfString()))[$toList](), onChanged: dart.fn(value => {
                  this.setState(dart.fn(() => {
                    this[_selectedCategory] = dart.nullCheck(value);
                  }, T.VoidTovoid()));
                }, T.StringNTovoid())}), new elevated_button._ElevatedButtonWithIcon.new({onPressed: dart.bind(this, _submitData), icon: C[49] || CT.C49, label: new text.Text.new(this.widget.expenseToEdit == null ? "Add Expense" : "Save Changes")})])})})});
    }
    static ['_#new#tearOff']() {
      return new main._AddExpenseState.new();
    }
  };
  (main._AddExpenseState.new = function() {
    this[_titleController] = new editable_text.TextEditingController.new();
    this[_amountController] = new editable_text.TextEditingController.new();
    this[_selectedCategory] = "Food";
    this[_selectedDateTime] = new core.DateTime.now();
    this[_formKey] = T.GlobalKeyOfFormState().new();
    main._AddExpenseState.__proto__.new.call(this);
    ;
  }).prototype = main._AddExpenseState.prototype;
  dart.addTypeTests(main._AddExpenseState);
  dart.addTypeCaches(main._AddExpenseState);
  dart.setMethodSignature(main._AddExpenseState, () => ({
    __proto__: dart.getMethods(main._AddExpenseState.__proto__),
    [_submitData]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._AddExpenseState, I[0]);
  dart.setFieldSignature(main._AddExpenseState, () => ({
    __proto__: dart.getFields(main._AddExpenseState.__proto__),
    [_titleController]: dart.finalFieldType(editable_text.TextEditingController),
    [_amountController]: dart.finalFieldType(editable_text.TextEditingController),
    [_selectedCategory]: dart.fieldType(core.String),
    [_selectedDateTime]: dart.fieldType(core.DateTime),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState))
  }));
  var applyFilters$ = dart.privateName(main, "FilterExpenses.applyFilters");
  var filterStartDate$ = dart.privateName(main, "FilterExpenses.filterStartDate");
  var filterEndDate$ = dart.privateName(main, "FilterExpenses.filterEndDate");
  var filterCategory$ = dart.privateName(main, "FilterExpenses.filterCategory");
  main.FilterExpenses = class FilterExpenses extends framework.StatefulWidget {
    get applyFilters() {
      return this[applyFilters$];
    }
    set applyFilters(value) {
      super.applyFilters = value;
    }
    get filterStartDate() {
      return this[filterStartDate$];
    }
    set filterStartDate(value) {
      super.filterStartDate = value;
    }
    get filterEndDate() {
      return this[filterEndDate$];
    }
    set filterEndDate(value) {
      super.filterEndDate = value;
    }
    get filterCategory() {
      return this[filterCategory$];
    }
    set filterCategory(value) {
      super.filterCategory = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let applyFilters = opts && 'applyFilters' in opts ? opts.applyFilters : null;
      let filterStartDate = opts && 'filterStartDate' in opts ? opts.filterStartDate : null;
      let filterEndDate = opts && 'filterEndDate' in opts ? opts.filterEndDate : null;
      let filterCategory = opts && 'filterCategory' in opts ? opts.filterCategory : null;
      return new main.FilterExpenses.new({key: key, applyFilters: applyFilters, filterStartDate: filterStartDate, filterEndDate: filterEndDate, filterCategory: filterCategory});
    }
    createState() {
      return new main._FilterExpensesState.new();
    }
  };
  (main.FilterExpenses.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let applyFilters = opts && 'applyFilters' in opts ? opts.applyFilters : null;
    let filterStartDate = opts && 'filterStartDate' in opts ? opts.filterStartDate : null;
    let filterEndDate = opts && 'filterEndDate' in opts ? opts.filterEndDate : null;
    let filterCategory = opts && 'filterCategory' in opts ? opts.filterCategory : null;
    this[applyFilters$] = applyFilters;
    this[filterStartDate$] = filterStartDate;
    this[filterEndDate$] = filterEndDate;
    this[filterCategory$] = filterCategory;
    main.FilterExpenses.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.FilterExpenses.prototype;
  dart.addTypeTests(main.FilterExpenses);
  dart.addTypeCaches(main.FilterExpenses);
  dart.setMethodSignature(main.FilterExpenses, () => ({
    __proto__: dart.getMethods(main.FilterExpenses.__proto__),
    createState: dart.fnType(framework.State$(main.FilterExpenses), [])
  }));
  dart.setLibraryUri(main.FilterExpenses, I[0]);
  dart.setFieldSignature(main.FilterExpenses, () => ({
    __proto__: dart.getFields(main.FilterExpenses.__proto__),
    applyFilters: dart.finalFieldType(dart.fnType(dart.dynamic, [dart.nullable(core.DateTime), dart.nullable(core.DateTime), dart.nullable(core.String)])),
    filterStartDate: dart.finalFieldType(dart.nullable(core.DateTime)),
    filterEndDate: dart.finalFieldType(dart.nullable(core.DateTime)),
    filterCategory: dart.finalFieldType(dart.nullable(core.String))
  }));
  var _startDate = dart.privateName(main, "_startDate");
  var _endDate = dart.privateName(main, "_endDate");
  var _pickStartDate = dart.privateName(main, "_pickStartDate");
  var _pickEndDate = dart.privateName(main, "_pickEndDate");
  var _applyFilters = dart.privateName(main, "_applyFilters");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  main._FilterExpensesState = class _FilterExpensesState extends framework.State$(main.FilterExpenses) {
    initState() {
      super.initState();
      this[_startDate] = this.widget.filterStartDate;
      this[_endDate] = this.widget.filterEndDate;
      this[_selectedCategory] = this.widget.filterCategory;
    }
    [_pickStartDate]() {
      return async.async(dart.void, (function* _pickStartDate() {
        let t0;
        let picked = (yield date_picker.showDatePicker({context: this.context, initialDate: (t0 = this[_startDate], t0 == null ? new core.DateTime.now() : t0), firstDate: new core.DateTime.new(2000), lastDate: new core.DateTime.new(2100)}));
        if (picked != null) {
          this.setState(dart.fn(() => {
            this[_startDate] = picked;
          }, T.VoidTovoid()));
        }
      }).bind(this));
    }
    [_pickEndDate]() {
      return async.async(dart.void, (function* _pickEndDate() {
        let t0;
        let picked = (yield date_picker.showDatePicker({context: this.context, initialDate: (t0 = this[_endDate], t0 == null ? new core.DateTime.now() : t0), firstDate: new core.DateTime.new(2000), lastDate: new core.DateTime.new(2100)}));
        if (picked != null) {
          this.setState(dart.fn(() => {
            this[_endDate] = picked;
          }, T.VoidTovoid()));
        }
      }).bind(this));
    }
    [_applyFilters]() {
      let t3, t2, t1, t0;
      t0 = this.widget;
      t1 = this[_startDate];
      t2 = this[_endDate];
      t3 = this[_selectedCategory];
      t0.applyFilters(t1, t2, t3);
      navigator.Navigator.of(this.context).pop(T.ObjectN());
    }
    build(context) {
      return new basic.Padding.new({padding: C[6] || CT.C6, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([C[64] || CT.C64, C[67] || CT.C67, new basic.Row.new({children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new text_button.TextButton.new({onPressed: dart.bind(this, _pickStartDate), child: new text.Text.new(this[_startDate] == null ? "Pick Start Date" : "Start: " + new date_format.DateFormat.yMMMd().format(dart.nullCheck(this[_startDate])))})}), new basic.Expanded.new({child: new text_button.TextButton.new({onPressed: dart.bind(this, _pickEndDate), child: new text.Text.new(this[_endDate] == null ? "Pick End Date" : "End: " + new date_format.DateFormat.yMMMd().format(dart.nullCheck(this[_endDate])))})})])}), new (T.DropdownButtonFormFieldOfString()).new({value: this[_selectedCategory], decoration: C[63] || CT.C63, items: T.JSArrayOfStringN().of([null, "Food", "Transport", "Entertainment", "Others"])[$map](T.DropdownMenuItemOfString(), dart.fn(category => {
                let t0;
                return new (T.DropdownMenuItemOfString()).new({value: category, child: new text.Text.new((t0 = category, t0 == null ? "All Categories" : t0))});
              }, T.StringNToDropdownMenuItemOfString()))[$toList](), onChanged: dart.fn(value => {
                this.setState(dart.fn(() => {
                  this[_selectedCategory] = value;
                }, T.VoidTovoid()));
              }, T.StringNTovoid())}), C[68] || CT.C68, new elevated_button._ElevatedButtonWithIcon.new({onPressed: dart.bind(this, _applyFilters), icon: C[69] || CT.C69, label: C[71] || CT.C71})])})});
    }
    static ['_#new#tearOff']() {
      return new main._FilterExpensesState.new();
    }
  };
  (main._FilterExpensesState.new = function() {
    this[_startDate] = null;
    this[_endDate] = null;
    this[_selectedCategory] = null;
    main._FilterExpensesState.__proto__.new.call(this);
    ;
  }).prototype = main._FilterExpensesState.prototype;
  dart.addTypeTests(main._FilterExpensesState);
  dart.addTypeCaches(main._FilterExpensesState);
  dart.setMethodSignature(main._FilterExpensesState, () => ({
    __proto__: dart.getMethods(main._FilterExpensesState.__proto__),
    [_pickStartDate]: dart.fnType(dart.void, []),
    [_pickEndDate]: dart.fnType(dart.void, []),
    [_applyFilters]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._FilterExpensesState, I[0]);
  dart.setFieldSignature(main._FilterExpensesState, () => ({
    __proto__: dart.getFields(main._FilterExpensesState.__proto__),
    [_startDate]: dart.fieldType(dart.nullable(core.DateTime)),
    [_endDate]: dart.fieldType(dart.nullable(core.DateTime)),
    [_selectedCategory]: dart.fieldType(dart.nullable(core.String))
  }));
  main.main = function main$0() {
    binding.runApp(C[72] || CT.C72);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
